// Generated by CoffeeScript 1.7.1
(function() {
  var Palindrome;

  window.euler = window.euler || {};

  euler.palindrome = Palindrome = (function() {
    function Palindrome(minFactor, maxFactor) {
      this.minFactor = minFactor;
      this.maxFactor = maxFactor;
      this.largest = this.numberExplore();
    }

    Palindrome.prototype.numberExplore = function(minMax) {
      var highest, i, j, range, sum, _i, _j, _k, _len, _len1, _ref, _ref1, _results;
      range = (function() {
        _results = [];
        for (var _i = _ref = this.maxFactor, _ref1 = this.minFactor; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; _ref <= _ref1 ? _i++ : _i--){ _results.push(_i); }
        return _results;
      }).apply(this);
      highest = 0;
      for (_j = 0, _len = range.length; _j < _len; _j++) {
        i = range[_j];
        if (i * i < highest) {
          break;
        }
        for (_k = 0, _len1 = range.length; _k < _len1; _k++) {
          j = range[_k];
          sum = i * j;
          if (this.isPalindrome(sum)) {
            highest = Math.max(sum, highest);
          }
        }
      }
      return highest;
    };

    Palindrome.prototype.isPalindrome = function(num) {
      var s;
      s = num.toString().split("");
      if (s.toString() === s.reverse().toString()) {
        return true;
      }
      return false;
    };

    return Palindrome;

  })();

}).call(this);
